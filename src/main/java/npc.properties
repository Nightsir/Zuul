#Definition of the npc present in the Zuul-Game.

#id:type:name:additional:logic
#name does not have to be unique, but there should not be multiple NPC with the same name in the same room
#additional are more information for specific NPC-Types, multiple Values are separated with semicolon (;)
#the logic can be written in basic JavaScript
#for better formating you can add a "\" at the and of the line
#		id:type:name:additional:\
#			var functionName = function(param) {\
#				executed code;\
#			};
#if type is not set there will be a fatal error, other properties will be replaced with ""
#types:::functionName(parameters)[return];
#			(function called with name and parameters (always lower case),
#				return defines return type if not set return is void,
#				multiple functions and states are possible)
#	Speaker:::speak(playerSaid)String;
#	Trader::isReseller:speak(playerSaid)String;\
#				getBuyList()TradeItem[];\
#				updateBuyList(TradeItem[]);\
#				buyValueModifier(itemType, itemId)Double;\
#				sellValueModifier(itemType, itemId)Double;
#		// buyValueModifier is only needed for items not present in buyList
#		// if no reselling leave updateBuyList empty, it is also possible to remove it completely

#code snippet
#load traderclasses
#	var TradeItem = Java.type("org.bitbucket.nightsir.zuuladvanced.model.npc.types.returntypes.TradeItem");\
#	var TradeItemArray = Java.type("org.bitbucket.nightsir.zuuladvanced.model.npc.types.returntypes.TradeItem[]");\

0:Speaker:Hans::\
	var test = true;\
	var speak = function(playerSaid) {\
		if (test) {\
			test = false;\
			return "stateTest";\
		}\
		switch(playerSaid) {\
			case "hello": return "Hi there";\
			case "bye": return "Just go now";\
		}\
		return "This is a pretty good game";\
	};
1:Trader:Cid:true:\
	var TradeItem = Java.type("org.bitbucket.nightsir.zuuladvanced.model.npc.types.returntypes.TradeItem");\
	var TradeItemArray = Java.type("org.bitbucket.nightsir.zuuladvanced.model.npc.types.returntypes.TradeItem[]");\
	\
	var itemList = new TradeItemArray(1);\
	itemList[0] = new TradeItem("0", 75);\
	\
	var speak = function(playerSaid) {\
		return "I'm not a man of many words";\
	};\
	var getBuyList = function() {return itemList;};\
	var updateBuyList = function(updateList) {itemList = updateList};\
	var buyValueModifier = function(itemType, itemId) {return 1.5};\
	var sellValueModifier = function(itemType, itemId) {return 0.5};